{"version":3,"file":"js/843.734f8e95.js","mappings":"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","sources":["webpack://board-site-front/./src/components/editor/ToastEditor.vue","webpack://board-site-front/./src/components/editor/ToastEditor.vue?4201","webpack://board-site-front/./src/components/tour/TourWrite.vue","webpack://board-site-front/./src/components/tour/TourWrite.vue?bf8d"],"sourcesContent":["<template>\r\n  <div   ref=\"refEditor\"></div>\r\n</template>\r\n\r\n<script setup>\r\nimport \"@toast-ui/editor/dist/toastui-editor.css\"; // Editor's Style\r\nimport '@toast-ui/editor/dist/theme/toastui-editor-dark.css';\r\nimport Editor from \"@toast-ui/editor\";\r\n// import colorSyntax from '@toast-ui/editor-plugin-color-syntax/dist/toastui-editor-plugin-color-syntax.css';\r\nimport { ref, onMounted,defineEmits } from \"vue\";\r\n\r\nconst emit =   defineEmits(['contentChange']);\r\nconst refEditor = ref(null); // template의 ref의 값과 동일한 변수 선언\r\nconst axios = require(\"axios\");\r\nonMounted( () => { \r\n   console.log(\"onMounted\")\r\n   const xeditor = new Editor({\r\n    el: refEditor.value,\r\n    height: \"500px\",\r\n    initialValue: \"\",             //init value \r\n    initialEditType: \"wysiwyg\",\r\n    previewStyle: \"tab\",\r\n    useDefaultHTMLSanitizer: false,\r\n    language:\"ko-KR\",\r\n    usageStatistics: false,\r\n    hideModeSwitch: true,   //밑에 창 \r\n    hooks: {\r\n    addImageBlobHook: (fileOrBlob, callback) => {\r\n        const headers = {\r\n          \"content-type\" : \"multipart/form-data\"\r\n        }\r\n        const formdata = new FormData();\r\n        formdata.append(\"multiFile\",fileOrBlob);\r\n        axios.post(process.env.VUE_APP_FILE_UPLOAD,formdata,{headers}).then((res) =>{\r\n          callback(res.data[0].filePath);\r\n        }).catch(() => {\r\n        }).finally(() => {\r\n        });\r\n    },\r\n    },\r\n    events: {                                               //editor의 값이 변경 될때마다 emit으로 부모 컴포넌트에 던져 준다.\r\n        change : ()=> emit('contentChange',xeditor.getHTML())\r\n    },\r\n    toolbarItems:[                                           //toolbar의 아이템\r\n        ['heading', 'bold', 'italic', 'strike'],\r\n        ['hr', 'quote'],\r\n        ['ul', 'ol', 'task'],\r\n        ['table', 'image', 'link'],\r\n        ['scrollSync'],\r\n    ],\r\n    \r\n\r\n  });\r\n  \r\n})\r\n\r\n</script>\r\n\r\n\r\n","import script from \"./ToastEditor.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ToastEditor.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    \r\n    <div class=\"input-group mb-3\" style=\"margin-top:1rem;\">\r\n        <div style=\"display:block; width:100%; margin:1rem;\">\r\n            도시 명 :\r\n            <select style=\"width:10%;\" v-model=\"citySelect\">\r\n                <option value=\"\">선택하세요.</option>\r\n                <option value=\"서울\">서울</option>\r\n                <option value=\"부산\">부산</option>\r\n                <option value=\"울산\">울산</option>\r\n                <option value=\"대구\">대구</option>\r\n                <option value=\"대전\">대전</option>\r\n                <option value=\"충남\">충남</option>\r\n                <option value=\"제주도\">제주도</option>\r\n            </select>\r\n        </div>\r\n            <input type=\"text\" v-model=\"title\" class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\" placeholder=\"제목을 입력해주세요.\">\r\n    </div>\r\n        <ToastEditor  @contentChange=\"editorContent\"></ToastEditor>\r\n        <div>\r\n            썸네일\r\n            <div style=\"width:500px ;height:300px\" v-if=\"preview!=''\">\r\n            <img :src=\"preview\" style=\"width:100% ; height:100%;\" />\r\n             </div>\r\n            <label class=\"file-label\" for=\"chooseFile\">썸네일 추가</label>\r\n                            <input class=\"file\" id=\"chooseFile\"\r\n                            type=\"file\" \r\n                            @click=\"resetImageUploader\"\r\n                            v-on:change=\"upload\"\r\n                            accept=\"image/png, image/jpeg, image/gif\"\r\n                            ref=\"imageUploader\"\r\n                            >\r\n        <button style=\"margin-left:1rem;\" type=\"button\" class=\"btn btn-primary\" @Click=\"resetImage()\">썸네일 삭제</button>\r\n        </div>\r\n        <div style=\"display:flex; justify-content:end;\">\r\n        <button type=\"button\" class=\"btn btn-primary\" @click=\"regArticle\">등록</button>\r\n        </div>\r\n    </template>\r\n    \r\n    \r\n    <script>\r\n    \r\n     import ToastEditor from '@/components/editor/ToastEditor.vue'\r\n    \r\n    export default {\r\n        data: function () {\r\n        return {\r\n            articleId:0,\r\n            contentChange:'',\r\n            title:\"\",\r\n            preview:'',\r\n            file:'',\r\n            citySelect:'',\r\n            saveThumbnail_id:''\r\n        }\r\n      },\r\n      components :{\r\n            ToastEditor\r\n      },\r\n      created(){\r\n      },    \r\n      methods: {\r\n            editorContent(value){\r\n                this.contentChange =  value;\r\n            },\r\n            async regArticle(){\r\n                 const headers = { 'Authorization': 'Bearer ' + sessionStorage.getItem(\"token\")}\r\n                var content = this.contentChange;\r\n                content = content.replace(/&nbsp;/gi,\"\");\r\n                content = content.replace(/<br>/gi,\"\");\r\n                content = content.replace(/ /gi,\"\");\r\n    \r\n                if(this.$emptyChk(this.title)){\r\n                    this.$swal('','제목을 입력해주세요.','warning');\r\n                    return;\r\n                }\r\n                if(this.$emptyChk(this.citySelect)){\r\n                    this.$swal('','도시를 선택하세요.','warning');\r\n                    return;\r\n                }\r\n                if(content ==\"<p><\\/p>\" || content==\"\"){\r\n                    this.$swal('','내용을 입력해주세요.','warning');\r\n                    return;\r\n                }\r\n                if(this.file!=''){\r\n                        const imageheaders = {\r\n                        \"content-type\" : \"multipart/form-data\"\r\n                        }\r\n                            const formdata = new FormData();\r\n                            formdata.append(\"multiFile\",this.file);\r\n                            \r\n                        await this.$axios.post(process.env.VUE_APP_FILE_UPLOAD,formdata,{imageheaders}).then((res) =>{\r\n                            this.saveThumbnail_id = res.data[0].fileId;\r\n                        }).catch(() => {\r\n                        }).finally(() => {\r\n                        });\r\n                }\r\n                let param = {\r\n                    \"title\"  : this.title ,\r\n                    \"content\" : this.contentChange,\r\n                    \"thumbnailId\" : this.saveThumbnail_id,\r\n                    \"city\" : this.citySelect\r\n                }\r\n                await this.$axios.post(process.env.VUE_APP_TOUR_INSERT ,param,{headers}).then((res) =>{\r\n                    if(res.data.resultCode==\"SUCCESS\"){\r\n                        this.$swal('',\"저장되었습니다.\",'success');\r\n                        this.$router.push(\"/tourList\"); \r\n                    }\r\n            }).catch((error) => {\r\n                 this.$swal('',error.response.data.result,'error');\r\n                 return false;\r\n            }).finally(() => {\r\n            //   this.loading = false;\r\n            });\r\n            },\r\n            upload(e) {\r\n                this.file = e.target.files[0];\r\n                var url = URL.createObjectURL(this.file);\r\n                this.preview = url;\r\n            },\r\n            resetImageUploader() {\r\n                this.$refs.imageUploader.value = '';\r\n            },\r\n            resetImage() {\r\n                this.file=\"\";\r\n                this.preview='';\r\n                this.$refs.imageUploader.value = '';\r\n            }\r\n      }\r\n    \r\n    }\r\n    \r\n    </script>\r\n    <style scoped>\r\n\r\n#chooseFile {\r\n    visibility: hidden;\r\n}\r\n.file-label {\r\n  background-color: #5b975b;\r\n  color: #fff;\r\n  text-align: center;\r\n  padding: 10px 1rem;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n}\r\n.file {\r\n  display: none;\r\n}\r\n    </style>","import { render } from \"./TourWrite.vue?vue&type=template&id=39d75f7c&scoped=true\"\nimport script from \"./TourWrite.vue?vue&type=script&lang=js\"\nexport * from \"./TourWrite.vue?vue&type=script&lang=js\"\n\nimport \"./TourWrite.vue?vue&type=style&index=0&id=39d75f7c&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Git_project\\\\board-site-adm\\\\front-end\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-39d75f7c\"]])\n\nexport default __exports__"],"names":["refEditor","ref","axios","require","onMounted","console","log","xeditor","Editor","el","value","height","initialValue","initialEditType","previewStyle","useDefaultHTMLSanitizer","language","usageStatistics","hideModeSwitch","hooks","addImageBlobHook","fileOrBlob","callback","headers","formdata","FormData","append","post","process","then","res","data","filePath","catch","finally","events","change","emit","getHTML","toolbarItems","__exports__","class","style","_hoisted_4","_createElementVNode","for","_ctx","$event","type","placeholder","_createVNode","_component_ToastEditor","onContentChange","$options","_createElementBlock","src","_hoisted_16","id","onClick","onChange","accept","articleId","contentChange","title","preview","file","citySelect","saveThumbnail_id","components","ToastEditor","created","methods","editorContent","this","async","sessionStorage","getItem","content","replace","$emptyChk","$swal","imageheaders","$axios","fileId","param","resultCode","$router","push","error","response","result","upload","e","target","files","url","URL","createObjectURL","resetImageUploader","$refs","imageUploader","resetImage","render"],"sourceRoot":""}